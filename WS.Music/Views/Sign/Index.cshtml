@model SignViewModel

@{
    ViewData["Title"] = "登陆";
}

<h2>登陆</h2>

<h4>用户</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Sign" method="post">
            @*<div asp-validation-summary="All" class="text-danger"></div>*@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*<input type="hidden" asp-for="Data.Id" />*@
            <div class="form-group">
                <label asp-for="UserName" class="control-label">用户名</label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PassWord" class="control-label">密码</label>
                <input asp-for="PassWord" class="form-control" />
                <span asp-validation-for="PassWord" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-action="SignIn" asp-route-returnUrl="@(ViewData["returnUrl"])" type="submit" value="登陆" class="btn btn-default" />
                <input asp-action="SignUp" asp-route-returnUrl="@(ViewData["returnUrl"])" type="submit" value="注册" class="btn btn-default" />
                <a href="~/Sign/SetPassWord?returnUrl=@(ViewData["returnUrl"])" class="btn btn-default">修改密码</a>
            </div>
        </form>
    </div>
</div>

@*<div>
        <a asp-action="Index">Back to List</a>
    </div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
